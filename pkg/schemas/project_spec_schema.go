//// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

func ManagementV1ProjectSpecSchema() map[string]*schema.Schema {
	return map[string]*schema.Schema{
		"access": {
			Type: schema.TypeList,
			Elem: &schema.Resource{
				Schema: StorageV1AccessSchema(),
			},
			Description: "Access holds the access rights for users and teams",
			Optional:    true,
		},
		"allowed_clusters": {
			Type: schema.TypeList,
			Elem: &schema.Resource{
				Schema: StorageV1AllowedClusterSchema(),
			},
			Description: "AllowedClusters are target clusters that are allowed to target with environments.",
			Optional:    true,
		},
		"allowed_templates": {
			Type: schema.TypeList,
			Elem: &schema.Resource{
				Schema: StorageV1AllowedTemplateSchema(),
			},
			Description: "AllowedTemplates are the templates that are allowed to use in this project.",
			Optional:    true,
		},
		"argo_c_d": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1ArgoIntegrationSpecSchema(),
			},
			Description: "ArgoIntegration holds information about ArgoCD Integration",
			Optional:    true,
		},
		"description": {
			Type:        schema.TypeString,
			Description: "Description describes an app",
			Optional:    true,
		},
		"display_name": {
			Type:        schema.TypeString,
			Description: "DisplayName is the name that should be displayed in the UI",
			Optional:    true,
		},
		"members": {
			Type: schema.TypeList,
			Elem: &schema.Resource{
				Schema: StorageV1MemberSchema(),
			},
			Description: "Members are the users and teams that are part of this project",
			Optional:    true,
		},
		"namespace_pattern": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1NamespacePatternSchema(),
			},
			Description: "NamespacePattern specifies template patterns to use for creating each space or virtual cluster's namespace",
			Optional:    true,
		},
		"owner": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1UserOrTeamSchema(),
			},
			Description: "Owner holds the owner of this object",
			Optional:    true,
		},
		"quotas": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1QuotasSchema(),
			},
			Description: "Quotas define the quotas inside the project",
			Optional:    true,
		},
	}
}
