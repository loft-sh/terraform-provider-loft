//// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	agentstoragev1 "github.com/loft-sh/agentapi/v2/pkg/apis/loft/storage/v1"
	"github.com/loft-sh/terraform-provider-loft/pkg/utils"
)

func StorageV1VirtualClusterAccessPointSchema() map[string]*schema.Schema {
	return map[string]*schema.Schema{
		"ingress": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1VirtualClusterAccessPointIngressSpecSchema(),
			},
			Description: "Ingress defines virtual cluster access via ingress",
			Optional:    true,
		},
	}
}

func CreateStorageV1VirtualClusterAccessPoint(in []interface{}) *agentstoragev1.VirtualClusterAccessPoint {
	if !utils.HasValue(in) {
		return nil
	}

	ret := &agentstoragev1.VirtualClusterAccessPoint{}

	data := in[0].(map[string]interface{})
	ret.Ingress = *CreateStorageV1VirtualClusterAccessPointIngressSpec(data["ingress"].([]interface{}))

	return ret
}

func ReadStorageV1VirtualClusterAccessPoint(obj *agentstoragev1.VirtualClusterAccessPoint) (interface{}, error) {
	values := map[string]interface{}{}
	// ComGithubLoftShAgentapiV3PkgApisLoftStorageV1VirtualClusterAccessPointIngressSpec
	// {resolvedType:{IsAnonymous:false IsArray:false IsMap:false IsInterface:false IsPrimitive:false IsCustomFormatter:false IsAliased:false IsNullable:true IsStream:false IsEmptyOmitted:true IsJSONString:false IsEnumCI:false IsBase64:false IsExternal:false IsTuple:false HasAdditionalItems:false IsComplexObject:true IsBaseType:false HasDiscriminator:false GoType:ComGithubLoftShAgentapiV3PkgApisLoftStorageV1VirtualClusterAccessPointIngressSpec Pkg:models PkgAlias: AliasedType: SwaggerType:object SwaggerFormat: Extensions:map[] ElemType:<nil> IsMapNullOverride:false IsSuperAlias:false IsEmbedded:false SkipExternalValidation:false} sharedValidations:{SchemaValidations:{CommonValidations:{Maximum:<nil> ExclusiveMaximum:false Minimum:<nil> ExclusiveMinimum:false MaxLength:<nil> MinLength:<nil> Pattern: MaxItems:<nil> MinItems:<nil> UniqueItems:false MultipleOf:<nil> Enum:[]} PatternProperties:map[] MaxProperties:<nil> MinProperties:<nil>} HasValidations:true HasContextValidations:true Required:false HasSliceValidations:false ItemsEnum:[]} Example: OriginalName:ingress Name:ingress Suffix: Path:"ingress" ValueExpression:m.Ingress IndexVar:i KeyVar: Title: Description:Ingress defines virtual cluster access via ingress Location:body ReceiverName:m Items:<nil> AllowsAdditionalItems:false HasAdditionalItems:false AdditionalItems:<nil> Object:<nil> XMLName: CustomTag: Properties:[] AllOf:[] HasAdditionalProperties:false IsAdditionalProperties:false AdditionalProperties:<nil> StrictAdditionalProperties:false ReadOnly:false IsVirtual:false IsBaseType:false HasBaseType:false IsSubType:false IsExported:true DiscriminatorField: DiscriminatorValue: Discriminates:map[] Parents:[] IncludeValidator:true IncludeModel:true Default:<nil> WantsMarshalBinary:true StructTags:[] ExtraImports:map[] ExternalDocs:<nil>}
	ingress, err := ReadStorageV1VirtualClusterAccessPointIngressSpec(&obj.Ingress)
	if err != nil {
		return nil, err
	}
	values["ingress"] = ingress
	return values, nil
}
