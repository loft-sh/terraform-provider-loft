//// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	storagev1 "github.com/loft-sh/api/v3/pkg/apis/storage/v1"
	"github.com/loft-sh/terraform-provider-loft/pkg/utils"
	"k8s.io/utils/ptr"
)

func StorageV1VaultAuthSpecSchema() map[string]*schema.Schema {
	return map[string]*schema.Schema{
		"token": {
			Type:        schema.TypeString,
			Description: "Token defines the token to use for authentication.",
			Optional:    true,
		},
		"token_secret_ref": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: IoK8sAPICoreV1SecretKeySelectorSchema(),
			},
			Description: "TokenSecretRef defines the Kubernetes secret to use for token authentication. Will be used if `token` is not provided.\n\nSecret data should contain the `token` key.",
			Optional:    true,
		},
	}
}

func CreateStorageV1VaultAuthSpec(data map[string]interface{}) *storagev1.VaultAuthSpec {
	if !utils.HasKeys(data) {
		return nil
	}

	ret := &storagev1.VaultAuthSpec{}
	if v, ok := data["token"].(string); ok && len(v) > 0 {
		ret.Token = ptr.To(v)
	}

	if v, ok := data["token_secret_ref"].([]interface{}); ok && len(v) > 0 && v[0] != nil {
		ret.TokenSecretRef = CreateIoK8sAPICoreV1SecretKeySelector(v[0].(map[string]interface{}))
	}

	return ret
}

func ReadStorageV1VaultAuthSpec(obj *storagev1.VaultAuthSpec) (interface{}, error) {
	if obj == nil {
		return nil, nil
	}

	values := map[string]interface{}{}
	values["token"] = obj.Token

	tokenSecretRef, err := ReadIoK8sAPICoreV1SecretKeySelector(obj.TokenSecretRef)
	if err != nil {
		return nil, err
	}
	values["token_secret_ref"] = tokenSecretRef

	return values, nil
}
