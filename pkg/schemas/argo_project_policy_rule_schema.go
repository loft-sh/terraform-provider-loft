//// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	storagev1 "github.com/loft-sh/api/v2/pkg/apis/storage/v1"
	"github.com/loft-sh/terraform-provider-loft/pkg/utils"
)

func StorageV1ArgoProjectPolicyRuleSchema() map[string]*schema.Schema {
	return map[string]*schema.Schema{
		"action": {
			Type:        schema.TypeString,
			Description: "Action is one of \"*\", \"get\", \"create\", \"update\", \"delete\", \"sync\", or \"override\".",
			Optional:    true,
		},
		"application": {
			Type:        schema.TypeString,
			Description: "Application is the ArgoCD project/repository to apply the rule to.",
			Optional:    true,
		},
		"permission": {
			Type:        schema.TypeBool,
			Description: "Allow applies the \"allow\" permission to the rule, if allow is not set, the permission will always be set to \"deny\".",
			Optional:    true,
		},
	}
}

func CreateStorageV1ArgoProjectPolicyRule(data map[string]interface{}) *storagev1.ArgoProjectPolicyRule {
	if !utils.HasKeys(data) {
		return nil
	}

	ret := &storagev1.ArgoProjectPolicyRule{}
	if v, ok := data["action"].(string); ok && len(v) > 0 {
		ret.Action = v
	}

	if v, ok := data["application"].(string); ok && len(v) > 0 {
		ret.Application = v
	}

	if v, ok := data["permission"].(bool); ok {
		ret.Allow = v
	}

	return ret
}

func ReadStorageV1ArgoProjectPolicyRule(obj *storagev1.ArgoProjectPolicyRule) (interface{}, error) {
	if obj == nil {
		return nil, nil
	}

	values := map[string]interface{}{}
	values["action"] = obj.Action

	values["application"] = obj.Application

	values["allow"] = obj.Allow

	return values, nil
}
