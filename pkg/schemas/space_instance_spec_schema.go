//// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

func ManagementV1SpaceInstanceSpecSchema() map[string]*schema.Schema {
	return map[string]*schema.Schema{
		"access": {
			Type: schema.TypeList,
			Elem: &schema.Resource{
				Schema: StorageV1AccessSchema(),
			},
			Description: "Access holds the access rights for users and teams",
			Optional:    true,
		},
		"cluster_ref": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1ClusterRefSchema(),
			},
			Description: "ClusterRef is the reference to the connected cluster holding this space",
			Optional:    true,
		},
		"description": {
			Type:        schema.TypeString,
			Description: "Description describes a space instance",
			Optional:    true,
		},
		"display_name": {
			Type:        schema.TypeString,
			Description: "DisplayName is the name that should be displayed in the UI",
			Optional:    true,
		},
		"extra_access_rules": {
			Type: schema.TypeList,
			Elem: &schema.Resource{
				Schema: StorageV1InstanceAccessRuleSchema(),
			},
			Description: "ExtraAccessRules defines extra rules which users and teams should have which access to the virtual cluster.",
			Optional:    true,
		},
		"owner": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1UserOrTeamSchema(),
			},
			Description: "Owner holds the owner of this object",
			Optional:    true,
		},
		"parameters": {
			Type:        schema.TypeString,
			Description: "Parameters are values to pass to the template",
			Optional:    true,
		},
		"template": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1SpaceTemplateDefinitionSchema(),
			},
			Description: "Template is the inline template to use for space creation. This is mutually exclusive with templateRef.",
			Optional:    true,
		},
		"template_ref": {
			Type:     schema.TypeList,
			MinItems: 1,
			MaxItems: 1,
			Elem: &schema.Resource{
				Schema: StorageV1TemplateRefSchema(),
			},
			Description: "TemplateRef holds the space template reference",
			Optional:    true,
		},
	}
}
