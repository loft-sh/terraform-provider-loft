# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  pull_request:
    branches:
      - main
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
      - ".github/workflows/*.yaml"
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'

permissions:
  pull-requests: write
  contents: write

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3.0.2

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # Ensure docs were generated
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.17'
      - uses: actions/checkout@v3.0.2
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)
  
   # # run acceptance tests in a matrix with Terraform core versions
  # test:
  #   name: Matrix Test
  #   needs: build
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # list whatever Terraform versions here you would like to support
  #       terraform:
  #         - '1.0.*'
  #         - '1.1.*'
  #   steps:
  #   - name: Set up Go
  #     uses: actions/setup-go@v3
  #     with:
  #       go-version: '1.17'
  #     id: go
  
  #   - uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_version: ${{ matrix.terraform }}
  #       terraform_wrapper: false

  #   - name: Check out terraform-provider-loft
  #     uses: actions/checkout@v3.0.2

  #   - name: Get dependencies
  #     run: |
  #       go mod download
        
  #   - name: TF acceptance tests
  #     timeout-minutes: 10
  #     env:
  #       TF_ACC: "1"
  #       TF_ACC_PROVIDER_NAMESPACE: "loft-sh"

  #     run: |
  #       go test -v -cover ./internal/provider/

  auto-approve-dependabot:
    runs-on: ubuntu-latest
    # needs: [build, generate, test]
    needs: [build, generate]
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Approve the PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
